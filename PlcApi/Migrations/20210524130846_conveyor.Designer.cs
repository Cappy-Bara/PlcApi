// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlcApi.Entities;

namespace PlcApi.Migrations
{
    [DbContext(typeof(PlcDbContext))]
    [Migration("20210524130846_conveyor")]
    partial class conveyor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PlcApi.Entities.Diode", b =>
                {
                    b.Property<int>("DiodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InputOutputId")
                        .HasColumnType("int");

                    b.Property<int>("PosX")
                        .HasColumnType("int");

                    b.Property<int>("PosY")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiodeId");

                    b.HasIndex("InputOutputId");

                    b.ToTable("Diodes");
                });

            modelBuilder.Entity("PlcApi.Entities.Elements.Block", b =>
                {
                    b.Property<int>("BlockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PlcId")
                        .HasColumnType("int");

                    b.Property<int>("PosX")
                        .HasColumnType("int");

                    b.Property<int>("PosY")
                        .HasColumnType("int");

                    b.HasKey("BlockId");

                    b.HasIndex("PlcId");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("PlcApi.Entities.Elements.Conveyor", b =>
                {
                    b.Property<int>("ConveyorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoardId")
                        .HasColumnType("int");

                    b.Property<int>("InputOutputId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTurnedDownOrLeft")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVertical")
                        .HasColumnType("bit");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("ConveyorId");

                    b.HasIndex("InputOutputId");

                    b.ToTable("Conveyors");
                });

            modelBuilder.Entity("PlcApi.Entities.InputOutput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Bit")
                        .HasColumnType("int");

                    b.Property<int>("Byte")
                        .HasColumnType("int");

                    b.Property<int>("PlcId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlcId");

                    b.ToTable("InputsOutputs");
                });

            modelBuilder.Entity("PlcApi.Entities.PlcEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("PLCs");
                });

            modelBuilder.Entity("PlcApi.Entities.PlcModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cpu")
                        .HasColumnType("int");

                    b.Property<int>("CpuModel")
                        .HasColumnType("int");

                    b.Property<short>("Rack")
                        .HasColumnType("smallint");

                    b.Property<short>("Slot")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("PlcApi.Entities.Diode", b =>
                {
                    b.HasOne("PlcApi.Entities.InputOutput", "InputOutput")
                        .WithMany()
                        .HasForeignKey("InputOutputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InputOutput");
                });

            modelBuilder.Entity("PlcApi.Entities.Elements.Block", b =>
                {
                    b.HasOne("PlcApi.Entities.PlcEntity", "Plc")
                        .WithMany()
                        .HasForeignKey("PlcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plc");
                });

            modelBuilder.Entity("PlcApi.Entities.Elements.Conveyor", b =>
                {
                    b.HasOne("PlcApi.Entities.InputOutput", "InputOutput")
                        .WithMany()
                        .HasForeignKey("InputOutputId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InputOutput");
                });

            modelBuilder.Entity("PlcApi.Entities.InputOutput", b =>
                {
                    b.HasOne("PlcApi.Entities.PlcEntity", "Plc")
                        .WithMany("InputOutput")
                        .HasForeignKey("PlcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plc");
                });

            modelBuilder.Entity("PlcApi.Entities.PlcEntity", b =>
                {
                    b.HasOne("PlcApi.Entities.PlcModel", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("PlcApi.Entities.PlcEntity", b =>
                {
                    b.Navigation("InputOutput");
                });
#pragma warning restore 612, 618
        }
    }
}
